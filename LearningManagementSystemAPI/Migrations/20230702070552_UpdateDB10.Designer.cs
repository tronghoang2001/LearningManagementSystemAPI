// <auto-generated />
using System;
using LearningManagementSystemAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningManagementSystemAPI.Migrations
{
    [DbContext(typeof(LmsContext))]
    [Migration("20230702070552_UpdateDB10")]
    partial class UpdateDB10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Allowance", b =>
                {
                    b.Property<int>("AllowanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllowanceId"), 1L, 1);

                    b.Property<string>("BasedOn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AllowanceId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("Allowance");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnswerId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Class");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ClassDetails", b =>
                {
                    b.Property<int>("ClassDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassDetailsId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("DeparmentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ClassDetailsId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassId");

                    b.HasIndex("DeparmentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.CollectTuition", b =>
                {
                    b.Property<int>("CollectTuitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectTuitionId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ExemptionsId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Receivables")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShoolYear")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Surcharge")
                        .HasColumnType("int");

                    b.Property<int>("TotalMoney")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("CollectTuitionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ExemptionsId");

                    b.ToTable("CollectTuition");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ContractInsurance", b =>
                {
                    b.Property<int>("TeacherContractId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceId")
                        .HasColumnType("int");

                    b.HasKey("TeacherContractId", "InsuranceId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("ContractInsurance");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Department");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<string>("ApplyWith")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<int>("ClassDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("ExamId");

                    b.HasIndex("ClassDetailsId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ExamBank", b =>
                {
                    b.Property<int>("ExamBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamBankId"), 1L, 1);

                    b.Property<string>("A")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("B")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("C")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("D")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamBankId");

                    b.ToTable("ExamBank");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ExamDetails", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("ExamBankId")
                        .HasColumnType("int");

                    b.HasKey("ExamId", "ExamBankId");

                    b.HasIndex("ExamBankId");

                    b.ToTable("ExamDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Exemptions", b =>
                {
                    b.Property<int>("ExemptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExemptionsId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Percent")
                        .HasColumnType("float");

                    b.HasKey("ExemptionsId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.ToTable("Exemptions");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Insurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Percent")
                        .HasColumnType("float");

                    b.HasKey("InsuranceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Insurance");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"), 1L, 1);

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("TopicId");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.OnLeave", b =>
                {
                    b.Property<int>("OnLeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnLeaveId"), 1L, 1);

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeKeepingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("OnLeaveId");

                    b.HasIndex("TimeKeepingId");

                    b.ToTable("OnLeave");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PermissionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.PermissionRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.PrivateFiles", b =>
                {
                    b.Property<int>("PrivateFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrivateFilesId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PrivateFilesId");

                    b.HasIndex("AccountId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.ToTable("PrivatesFile");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QuestionId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.QuestionDetails", b =>
                {
                    b.Property<int>("QuestionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionDetailsId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("QuestionDetailsId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Rank", b =>
                {
                    b.Property<int>("RankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankId"), 1L, 1);

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RankId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Rank");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Receipts", b =>
                {
                    b.Property<int>("ReceiptsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptsId"), 1L, 1);

                    b.Property<int>("CollectTuitionId")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("ReceiptsId");

                    b.HasIndex("CollectTuitionId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Resources", b =>
                {
                    b.Property<int>("ResourcesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourcesId"), 1L, 1);

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ResourcesId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("LessonId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Revenue", b =>
                {
                    b.Property<int>("RevenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevenueId"), 1L, 1);

                    b.Property<string>("According")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RevenueId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Revenue");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryId"), 1L, 1);

                    b.Property<DateTime>("ApplicableDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<double>("CoefficientsSalary")
                        .HasColumnType("float");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.Property<double>("WageRank")
                        .HasColumnType("float");

                    b.HasKey("SalaryId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("RankId");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.SalaryStatistics", b =>
                {
                    b.Property<int>("SalaryStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryStatisticsId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Remaining")
                        .HasColumnType("int");

                    b.Property<int>("Spent")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("SalaryStatisticsId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SalaryStatistics");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.SubjectInformation", b =>
                {
                    b.Property<int>("InformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InformationId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InformationId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectInformation");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.SubjectTuition", b =>
                {
                    b.Property<int>("SubjectTuitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectTuitionId"), 1L, 1);

                    b.Property<double>("CollectionRates")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SubjectTuitionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectTuition");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Support", b =>
                {
                    b.Property<int>("SupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupportId");

                    b.HasIndex("AccountId");

                    b.ToTable("Support");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherContract", b =>
                {
                    b.Property<int>("TeacherContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherContractId"), 1L, 1);

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.HasKey("TeacherContractId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("SalaryId");

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("TeacherContract");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherPosition", b =>
                {
                    b.Property<int>("TeacherPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherPositionId"), 1L, 1);

                    b.Property<DateTime>("ApplicableDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeacherPositionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TeacherPosition");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherProfile", b =>
                {
                    b.Property<int>("TeacherProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherProfileId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplicableDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionFile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlaceOfIssue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("QualificationLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SocialInsurance")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeacherPositionId")
                        .HasColumnType("int");

                    b.HasKey("TeacherProfileId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DecisionFile")
                        .IsUnique();

                    b.HasIndex("IdNumber")
                        .IsUnique();

                    b.HasIndex("SocialInsurance")
                        .IsUnique()
                        .HasFilter("[SocialInsurance] IS NOT NULL");

                    b.HasIndex("TeacherPositionId");

                    b.ToTable("TeacherProfile");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TimeKeeping", b =>
                {
                    b.Property<int>("TimeKeepingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeKeepingId"), 1L, 1);

                    b.Property<int>("ActualWorkDate")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDate")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("TimeKeepingId");

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("TimeKeeping");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("TopicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Account", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Allowance", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("Allowances")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ClassDetails", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("ClassDetails")
                        .HasForeignKey("AccountId");

                    b.HasOne("LearningManagementSystemAPI.Models.Class", "Class")
                        .WithMany("ClassDetails")
                        .HasForeignKey("ClassId");

                    b.HasOne("LearningManagementSystemAPI.Models.Department", "Department")
                        .WithMany("ClassDetails")
                        .HasForeignKey("DeparmentId");

                    b.HasOne("LearningManagementSystemAPI.Models.Subject", "Subject")
                        .WithMany("ClassDetails")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Account");

                    b.Navigation("Class");

                    b.Navigation("Department");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.CollectTuition", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("CollectTuitions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.Discount", "Discount")
                        .WithMany("CollectTuitions")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.Exemptions", "Exemptions")
                        .WithMany("CollectTuitions")
                        .HasForeignKey("ExemptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Discount");

                    b.Navigation("Exemptions");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ContractInsurance", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Insurance", "Insurance")
                        .WithMany("ContractInsurances")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.TeacherContract", "TeacherContract")
                        .WithMany("ContractInsurances")
                        .HasForeignKey("TeacherContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insurance");

                    b.Navigation("TeacherContract");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Exam", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.ClassDetails", "ClassDetails")
                        .WithMany("Exams")
                        .HasForeignKey("ClassDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ExamDetails", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.ExamBank", "ExamBank")
                        .WithMany("ExamDetails")
                        .HasForeignKey("ExamBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.Exam", "Exam")
                        .WithMany("ExamDetails")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("ExamBank");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Lesson", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Topic", "Topic")
                        .WithMany("Lessons")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.OnLeave", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.TimeKeeping", "TimeKeeping")
                        .WithMany("OnLeaves")
                        .HasForeignKey("TimeKeepingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeKeeping");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.PermissionRole", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Permission", "Permission")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.Role", "Role")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.PrivateFiles", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("PrivateFiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.QuestionDetails", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("QuestionDetails")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.Answer", "Answer")
                        .WithMany("QuestionDetails")
                        .HasForeignKey("AnswerId");

                    b.HasOne("LearningManagementSystemAPI.Models.Question", "Question")
                        .WithMany("QuestionDetails")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Receipts", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.CollectTuition", "CollectTuition")
                        .WithMany("Receipts")
                        .HasForeignKey("CollectTuitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollectTuition");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Resources", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Lesson", "Lesson")
                        .WithMany("Resources")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Salary", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Rank", "Rank")
                        .WithMany("Salaries")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.SubjectInformation", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Subject", "Subject")
                        .WithMany("SubjectInformation")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.SubjectTuition", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Subject", "Subject")
                        .WithMany("SubjectTuitions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Support", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("Supports")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherContract", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Salary", "Salary")
                        .WithMany("TeacherContracts")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("TeacherContracts")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");

                    b.Navigation("TeacherProfile");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherProfile", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Account", "Account")
                        .WithMany("TeacherProfiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystemAPI.Models.TeacherPosition", "TeacherPosition")
                        .WithMany("TeacherProfiles")
                        .HasForeignKey("TeacherPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TeacherPosition");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TimeKeeping", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("TimeKeepings")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Topic", b =>
                {
                    b.HasOne("LearningManagementSystemAPI.Models.Subject", "Subject")
                        .WithMany("Topics")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Account", b =>
                {
                    b.Navigation("ClassDetails");

                    b.Navigation("CollectTuitions");

                    b.Navigation("PrivateFiles");

                    b.Navigation("QuestionDetails");

                    b.Navigation("Supports");

                    b.Navigation("TeacherProfiles");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Answer", b =>
                {
                    b.Navigation("QuestionDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Class", b =>
                {
                    b.Navigation("ClassDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ClassDetails", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.CollectTuition", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Department", b =>
                {
                    b.Navigation("ClassDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Discount", b =>
                {
                    b.Navigation("CollectTuitions");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Exam", b =>
                {
                    b.Navigation("ExamDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.ExamBank", b =>
                {
                    b.Navigation("ExamDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Exemptions", b =>
                {
                    b.Navigation("CollectTuitions");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Insurance", b =>
                {
                    b.Navigation("ContractInsurances");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Lesson", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Permission", b =>
                {
                    b.Navigation("PermissionRoles");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Question", b =>
                {
                    b.Navigation("QuestionDetails");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Rank", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Role", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("PermissionRoles");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Salary", b =>
                {
                    b.Navigation("TeacherContracts");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Subject", b =>
                {
                    b.Navigation("ClassDetails");

                    b.Navigation("SubjectInformation");

                    b.Navigation("SubjectTuitions");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherContract", b =>
                {
                    b.Navigation("ContractInsurances");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherPosition", b =>
                {
                    b.Navigation("TeacherProfiles");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TeacherProfile", b =>
                {
                    b.Navigation("Allowances");

                    b.Navigation("TeacherContracts");

                    b.Navigation("TimeKeepings");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.TimeKeeping", b =>
                {
                    b.Navigation("OnLeaves");
                });

            modelBuilder.Entity("LearningManagementSystemAPI.Models.Topic", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
